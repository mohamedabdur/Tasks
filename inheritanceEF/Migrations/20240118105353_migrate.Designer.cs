// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inheritanceEF.Models;

#nullable disable

namespace inheritanceEF.Migrations
{
    [DbContext(typeof(Data))]
    [Migration("20240118105353_migrate")]
    partial class migrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicle", b =>
                {
                    b.Property<string>("vehicleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("vehicleMaxSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vehicleNumber");

                    b.ToTable("Vehicle");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Bike", b =>
                {
                    b.HasBaseType("Vehicle");

                    b.ToTable("Bike");
                });

            modelBuilder.Entity("Car", b =>
                {
                    b.HasBaseType("Vehicle");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Bike", b =>
                {
                    b.HasOne("Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Bike", "vehicleNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Car", b =>
                {
                    b.HasOne("Vehicle", null)
                        .WithOne()
                        .HasForeignKey("Car", "vehicleNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
